---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrepository-source-v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bjw-s-charts
  namespace: flux-system
spec:
  interval: 12h
  url: https://nicholaswilde.github.io/helm-charts/
---
apiVersion: v1
kind: Namespace
metadata:
  name: ${code_server_app_name}
---
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${code_server_app_name}
  namespace: ${code_server_app_name}
spec:
  interval: 30m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  # https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
    controllers:
      code-server:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.101.2@sha256:5f654c1137f8d87c8cf44253318bf94b85f6f9129e426a9956da46eb602dcc5a
            args:
              - --auth
              - none
              - --disable-telemetry
              - --disable-update-check
              - --user-data-dir
              - /config/.code-server
              - --extensions-dir
              - /config/.code-server
              - --port
              - "8080"
              - /config

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            ports:
              - name: http
                containerPort: &httpPort 8080

            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi

    service:
      app:
        controller: code-server
        type: ClusterIP
        ports:
          http:
            port: *httpPort
            protocol: TCP

    ingress:
      app:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.techtales.io/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.techtales.io/oauth2/start?rd=$request_uri"
          nginx.ingress.kubernetes.io/auth-response-headers: x-auth-request-user, x-auth-request-email
