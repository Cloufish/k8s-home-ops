apiVersion: v1
kind: Namespace
metadata:
  name: ${cyberchef_app_name}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cyberchef
  namespace: ${cyberchef_app_name}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  values:
    controllers:
      ${cyberchef_app_name}:
        replicas: 1
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: docker.io/mpepping/cyberchef
              tag: v10.19.4
            env:
              TZ: Europe/Warsaw
            ports:
              - name: http
                containerPort: &httpPort 8000
            resources:
              requests:
                cpu: 25m
                memory: 128Mi
              limits:
                memory: 1Gi
    service:
      app:
        controller: ${cyberchef_app_name}
        type: ClusterIP
        ports:
          http:
            port: *httpPort
            protocol: TCP
    ingress:
      app:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: 'true'
          nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
          nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 3Gi
        globalMounts:
          - path: /app
