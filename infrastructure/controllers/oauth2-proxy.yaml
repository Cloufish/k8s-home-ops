---
apiVersion: v1
kind: Namespace
metadata:
  name: oauth2-proxy
  labels:
    toolkit.fluxcd.io/tenant: sre-team
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: oauth2-proxy
  namespace: oauth2-proxy
spec:
  interval: 24h
  url: https://oauth2-proxy.github.io/manifests
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: oauth2-proxy 
  namespace: oauth2-proxy 
spec:
  interval: 5m
  chart:
    spec:
      chart: oauth2-proxy
      version: 7.14.1
      sourceRef:
        kind: HelmRepository
        name: oauth2-proxy 
        namespace: oauth2-proxy 
      interval: 10m
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
  maxHistory: 3
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
  values:
    image:
      repository: quay.io/oauth2-proxy/oauth2-proxy
    # Configure Kubernetes liveness and readiness probes.
    # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    # Disable both when deploying with Istio 1.0 mTLS. https://istio.io/help/faq/security/#k8s-health-checks
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    metrics:
      servicemonitor:
        enabled: true
    config:
      existingSecret: oauth2-proxy-secret
      configFile: |
        provider = "google"
        auth_logging = true
        cookie_domains = ".${app_k8s_domain_name}"
        cookie_httponly = true
        cookie_name = "cloufish-oauth2"
        cookie_refresh = "1h"
        cookie_samesite = "lax"
        cookie_secure = true
        email_domains = [ "*" ]
        pass_access_token = true
        pass_authorization_header = true
        pass_basic_auth = false
        request_logging = true
        session_store_type = "cookie"
        silence_ping_logging = true
        set_authorization_header = true
        set_xauthrequest = true
        skip_jwt_bearer_tokens = true
        skip_provider_button = true
        ssl_insecure_skip_verify = false
        standard_logging = true
        upstreams = [ "static://200" ]
        whitelist_domains = ".${app_k8s_domain_name}"

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
      className: nginx
      hosts:
        - oauth2-proxy.${app_k8s_domain_name}