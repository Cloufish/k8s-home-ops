---
apiVersion: v1
kind: Namespace
metadata:
  name: prometheus-operator
  labels:
    toolkit.fluxcd.io/tenant: sre-team
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: prometheus-operator
spec:
  interval: 24h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: prometheus-operator
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "75.x"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: prometheus-operator
      interval: 12h 
  values: 
    grafana: 
      adminPassword:             
        apiTokenSecretRef:
          name: grafana-secret
          key: grafana-password
      ingress: 
        enabled: true 
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts: 
          - grafana.${app_k8s_domain_name}
      tls: 
        - secretName: grafana-${default_k8s_cert_name}
          hosts: 
          - grafana.${app_k8s_domain_name}
    alertmanager: 
      ingress: 
        enabled: true 
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts: 
          - alertmanager.${app_k8s_domain_name}
      tls: 
        - secretName: alertmanager-${default_k8s_cert_name}
          hosts: 
          - alertmanager.${app_k8s_domain_name}
    prometheus: 
      ingress: 
        enabled: true 
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts: 
          - prometheus.${app_k8s_domain_name}
      tls: 
        - secretName: prometheus-${default_k8s_cert_name}
          hosts: 
          - prometheus.${app_k8s_domain_name}

